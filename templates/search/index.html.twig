{% extends 'base.html.twig' %}

{% block title %}Search{% endblock %}

{% block body %}
    <style>
        .search-container {
            position: relative;
            display: flex;
            justify-content: center;
            margin-top: 50px;
        }

        .search-form {
            width: 100%;
            max-width: 800px; /* Adjust the width as needed */
            position: relative; /* Ensure the dropdown is positioned relative to this container */
        }

        .search-input {
            width: 100%; /* Full width of the container */
            font-size: 1.5em; /* Larger font size */
            padding: 10px;
            box-sizing: border-box; /* Ensure padding is included in the width */
        }

        .suggestions-dropdown {
            position: absolute;
            top: 100%; /* Position directly below the search input */
            left: 0;
            width: 100%; /* Match the width of the input */
            border: 1px solid #ccc;
            background-color: #fff;
            z-index: 1000;
            display: none; /* Hidden by default */
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            max-height: 300px; /* Limit height and add scroll if needed */
            overflow-y: auto; /* Add vertical scroll if suggestions exceed height */
            box-sizing: border-box; /* Ensure padding is included in the width */
        }

        .suggestion-section-label {
            padding: 10px;
            font-weight: bold;
            background-color: #e0e0e0; /* Darker background color */
            border-bottom: 1px solid #ddd;
        }

        .suggestion-item {
            padding: 10px;
            cursor: pointer;
        }

        .suggestion-item:hover {
            background-color: #f0f0f0;
        }
    </style>

    <div class="search-container">
        <div class="search-form">
            <input type="text" id="search-input" class="search-input" placeholder="Search..." autocomplete="off" />
            <div id="suggestions-container" class="suggestions-dropdown"></div>
        </div>
    </div>

    <script>
        document.getElementById('search-input').addEventListener('input', function() {
            const searchQuery = this.value;

            if (searchQuery.trim() === '') {
                clearSuggestions();
                return;
            }

            fetch(`/search/ajax?search=${encodeURIComponent(searchQuery)}`, {
                method: 'GET' // Ensure the method is GET
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Data:', data); // Log data to ensure ids are present
                    const groupedResults = {
                        clients: data.clients.map(client => ({
                            type: 'client',
                            label: `${client.firstname} ${client.lastname} (${client.email})`,
                            id: client.id // Ensure this id is being set correctly
                        })),
                        products: data.products.map(product => ({
                            type: 'product',
                            label: `${product.name} (${product.description})`,
                            id: product.id // Ensure this id is being set correctly
                        })),
                        factures: data.factures.map(facture => ({
                            type: 'facture',
                            label: `${facture.description} - ${facture.clientName}`,
                            id: facture.id // Ensure this id is being set correctly
                        }))
                    };
                    updateSuggestions(groupedResults);
                })
                .catch(error => {
                    console.error('Error:', error);
                    clearSuggestions(); // Optionally clear suggestions on error
                });
        });

        function updateSuggestions(groupedResults) {
            const suggestionsContainer = document.getElementById('suggestions-container');
            suggestionsContainer.innerHTML = '';

            const types = ['clients', 'products', 'factures'];

            let hasResults = false;

            types.forEach(type => {
                const items = groupedResults[type];
                if (items.length > 0) {
                    hasResults = true;
                    const sectionLabel = document.createElement('div');
                    sectionLabel.classList.add('suggestion-section-label');
                    sectionLabel.textContent = type.charAt(0).toUpperCase() + type.slice(1);
                    suggestionsContainer.appendChild(sectionLabel);

                    items.forEach(suggestion => {
                        const suggestionItem = document.createElement('div');
                        suggestionItem.classList.add('suggestion-item');
                        suggestionItem.textContent = suggestion.label;
                        suggestionItem.addEventListener('click', () => {
                            handleSuggestionClick(suggestion);
                        });
                        suggestionsContainer.appendChild(suggestionItem);
                    });
                }
            });

            suggestionsContainer.style.display = hasResults ? 'block' : 'none';
        }

        function handleSuggestionClick(suggestion) {
            console.log('Suggestion Clicked:', suggestion); // Log suggestion to check id

            let url = '';

            switch (suggestion.type) {
                case 'client':
                    url = `/clients/${suggestion.id}`;
                    break;
                case 'product':
                    url = `/products/${suggestion.id}`;
                    break;
                case 'facture':
                    url = `/factures/${suggestion.id}`;
                    break;
            }

            if (url) {
                window.location.href = url; // Redirect to the new URL
            }

            clearSuggestions();
        }

        function clearSuggestions() {
            const suggestionsContainer = document.getElementById('suggestions-container');
            suggestionsContainer.innerHTML = '';
            suggestionsContainer.style.display = 'none';
        }
    </script>
{% endblock %}
