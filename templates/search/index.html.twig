{% extends 'base.html.twig' %}

{% block title %}Search{% endblock %}

{% block body %}
    <style>
        .search-container {
            display: flex;
            justify-content: center;
            margin-top: 50px;
        }
        .search-form {
            width: 100%;
            max-width: 600px; /* Adjust the width as needed */
        }
        .search-input {
            font-size: 1.5em; /* Larger font size */
        }
        .result-section {
            display: none; /* Hide by default */
        }
    </style>

    <div class="search-container">
        <div class="search-form">
            <input type="text" id="search-input" class="form-control mr-sm-2 search-input" placeholder="Search..." />
        </div>
    </div>

    <div id="clients-section" class="result-section">
        <h2>Clients</h2>
        <ul class="list-group" id="clients-list"></ul>
    </div>

    <div id="products-section" class="result-section">
        <h2>Products</h2>
        <ul class="list-group" id="products-list"></ul>
    </div>

    <div id="factures-section" class="result-section">
        <h2>Factures</h2>
        <ul class="list-group" id="factures-list"></ul>
    </div>

    <script>
        document.getElementById('search-input').addEventListener('input', function() {
            const searchQuery = this.value;

            if (searchQuery.trim() === '') {
                clearResults();
                return;
            }

            fetch(`/search/ajax?search=${encodeURIComponent(searchQuery)}`, {
                method: 'GET' // Ensure the method is GET
            })
                .then(response => response.json())
                .then(data => {
                    updateList('clients-list', 'clients-section', data.clients, ['firstname', 'lastname', 'email']);
                    updateList('products-list', 'products-section', data.products, ['name', 'description', 'price', 'stock']);
                    updateList('factures-list', 'factures-section', data.factures, ['description', 'quantity', 'totalPrice', 'productName', 'clientName']);
                })
                .catch(error => console.error('Error:', error));
        });

        function updateList(listId, sectionId, items, fields) {
            const list = document.getElementById(listId);
            const section = document.getElementById(sectionId);
            list.innerHTML = '';

            if (items.length === 0) {
                section.style.display = 'none';
                return;
            }

            section.style.display = 'block';
            items.forEach(item => {
                let listItem = '<li class="list-group-item">';
                fields.forEach(field => {
                    listItem += `${item[field] || 'N/A'} - `;
                });

                listItem = listItem.slice(0, -3); // Remove the last ' - '
                listItem += '</li>';
                list.innerHTML += listItem;
            });
        }

        function clearResults() {
            updateList('clients-list', 'clients-section', [], ['firstname', 'lastname', 'email']);
            updateList('products-list', 'products-section', [], ['name', 'description', 'price', 'stock']);
            updateList('factures-list', 'factures-section', [], ['description', 'quantity', 'totalPrice', 'productName', 'clientName']);
        }
    </script>
{% endblock %}
